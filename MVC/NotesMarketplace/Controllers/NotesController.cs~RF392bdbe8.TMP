using NotesMarketplace.context;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace NotesMarketplace.Controllers
{
    [SessionState(System.Web.SessionState.SessionStateBehavior.Default)]
    public class NotesController : Controller
    {
        // GET: Notes
        Sample_1Entities5 dbObj = new Sample_1Entities5();
        public ActionResult Notes(SellerNote obj)
        {
            return View(obj);
        }


        [HttpPost]
        public ActionResult AddNotes(SellerNote model)
        {

            string fileName = Path.GetFileNameWithoutExtension(model.ImageFile.FileName);
            string extension = Path.GetExtension(model.ImageFile.FileName);
            fileName = fileName + DateTime.Now.ToString("yymmssfff") + extension;
            model.DisplayPicture = "~/Image/" + fileName;
            fileName = Path.Combine(Server.MapPath("~/Image/"), fileName);
            model.ImageFile.SaveAs(fileName);

           

            string fileName1 = Path.GetFileNameWithoutExtension(model.ImageFile1.FileName);
            string extension1 = Path.GetExtension(model.ImageFile1.FileName);
            fileName1 = fileName1 + DateTime.Now.ToString("yymmssfff") + extension1;
            model.NotesPreview = "~/Image/" + fileName1;
            fileName1 = Path.Combine(Server.MapPath("~/Image/"), fileName1);
            model.ImageFile1.SaveAs(fileName1);

            SellerNote obj = new SellerNote();
            if (ModelState.IsValid)
            {

                obj.ID = model.ID;
                obj.SellerID = ((int)Session["ID"]);
                //obj.UserID = model.UserID;
                obj.Status = model.Status;
                obj.ActionedBy = model.ActionedBy;
                /*obj.SecondaryEmailAddress = model.SecondaryEmailAddress;
                obj.CountryCode = model.CountryCode;*/
                obj.AdminRemarks = model.AdminRemarks;
                //obj.ProfilePicture = model.ProfilePicture;
                obj.PublishedDate = model.PublishedDate;
                obj.Title = model.Title;
                obj.Category = model.Category;
                obj.NoteType = model.NoteType;
                obj.NumberOfPages = model.NumberOfPages;
                obj.Description = model.Description;
                obj.UniversityName = model.UniversityName;
                obj.Country = model.Country;
                obj.Course = model.Course;
                obj.CourseCode = model.CourseCode;
                obj.Professor = model.Professor;
                obj.IsPaid = model.IsPaid;
                obj.SellingPrice = model.SellingPrice;



                if (model.ID == 0)
                {

                    dbObj.SellerNotes.Add(obj);
                    dbObj.SaveChanges();
                }
                else
                {
                    dbObj.Entry(obj).State = System.Data.Entity.EntityState.Modified;
                    dbObj.SaveChanges();
                }
            }
            ModelState.Clear();

            return View("Notes");
        }
    }
}