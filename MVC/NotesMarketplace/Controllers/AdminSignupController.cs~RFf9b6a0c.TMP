using NotesMarketplace.context;
using System;
using System.Collections.Generic;
using System.Data.Entity.Validation;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace NotesMarketplace.Controllers
{
    public class AdminSignupController : Controller
    {
        public string ReturnUrl { get; private set; }

        private DB_Entities _db = new DB_Entities();
        // GET: AdminSignup
        [HttpGet]
        public ActionResult Signup()
        {


            return View();


        }

        // GET: Signup


        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Signup([Bind(Exclude = "IsEmailVerified,IsActive")] User user)
        {

            bool Status = false;
            string message = "";

            if (ModelState.IsValid)
            {
                #region 
                var isExist = IsEmailExist(user.EmailID);
                if (isExist)
                {
                    ModelState.AddModelError("EmailExist", "Email already exist");
                    return View(user);
                }
                #endregion

                #region Generate Activation Cide
                user.IsActive = true;
                #endregion

                #region 
                //    user.Password = Crypto.Hash(user.Password);
                //  user.ConfirmPassword = Crypto.Hash(user.ConfirmPassword);
                #endregion
                user.IsEmailVerified = false;
                user.RoleID = 2;

                #region
                Sample_1Entities1 dc = new Sample_1Entities1();


                try
                {
                    try
                    {
                        dc.Users.Add(user);
                        dc.SaveChanges();
                    }
                    catch (DbEntityValidationException e)
                    {

                    }

                    SendVerificationLinkEmail(user.EmailID, user.IsActive.ToString());
                    message = "Thank you for Sign up<br> Please verify the email address via clicking on the link we sent you via email.";
                    Status = true;
                }
                finally
                {
                    Dispose();
                }
                #endregion

            }
            else
            {
                message = "Invalid Request";
            }
            ViewBag.Message = message;
            ViewBag.Status = Status;
            return View(user);
        }
       

    }
}